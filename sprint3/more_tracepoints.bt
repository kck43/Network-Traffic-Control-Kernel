#!/usr/bin/env bpftrace

#include <linux/skbuff.h>


tracepoint:syscalls:sys_enter_sendto
/ comm == "send_raw_eth_2" /
{
    $fd = args->fd;
    $buff = (uint8*)args->buff;
    $len = args->len;

    // Print the fd and length for context
    //printf("fd: %d, len: %d\n", $fd, $len);

    // extract unique payload header from 
    //printf("should be zeros: 0x%04x\n", *(uint16 *)($buff + 14)); 
    $p = (uint8 *)($buff + 14);
    // need to account for little endian
    $key = ((uint16)$p[0] << 8) | (uint16)$p[1];

    @sendto_timestamps[$key] = nsecs; // mark current time
}

tracepoint:net:net_dev_xmit
/ comm == "send_raw_eth_2" /
{
  $skb = (struct sk_buff *)(args->skbaddr);
  $data = $skb->head + $skb->mac_header;

  //printf("should be zeroes: 0x%04x\n", *(uint16 *)($data));

  $p = (uint8 *)($data + 14);
  // need to account for little endian
  $key = ((uint16)$p[0] << 8) | (uint16)$p[1];
  @xmit_timestamps[$key] = nsecs;
  //printf("key : %d\n", $key); 
}

tracepoint:net:net_dev_start_xmit
/ comm == "send_raw_eth_2" /
{
  $skb = (struct sk_buff *)(args->skbaddr);
  $data = $skb->head + $skb->mac_header;

  //printf("should be zeroes: 0x%04x\n", *(uint16 *)($data));

  $p = (uint8 *)($data + 14);
  // need to account for little endian
  $key = ((uint16)$p[0] << 8) | (uint16)$p[1];
  @start_xmit_timestamps[$key] = nsecs;
  //printf("key : %d\n", $key); 
}